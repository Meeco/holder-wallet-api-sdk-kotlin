/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package me.meeco.holder.wallet.models

import me.meeco.holder.wallet.models.PresentationDefinition
import me.meeco.holder.wallet.models.PresentationRequestSetCredentialsRequestModelDtoCredentialsInner

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param state 
 * @param clientId 
 * @param credentials 
 * @param nonce Nonce provided by the verifier to be returned in the response
 * @param presentationDefinition 
 * @param redirectUri 
 * @param responseMode Parameter to ask the Wallet to send the response to the verifier. Possible values are 'direct_post', 'post'.
 * @param responseType Response type of the request. Possible values are `vp_token`, `id_token`
 * @param responseUri Response uri of the request. Only relevant if response type is `direct_post`
 * @param verifierState State provided by the verifier to be returned in the response
 */


data class PresentationRequestSubmitRequestModelDto (

    @Json(name = "state")
    val state: kotlin.String,

    @Json(name = "client_id")
    val clientId: kotlin.String? = null,

    @Json(name = "credentials")
    val credentials: kotlin.collections.List<PresentationRequestSetCredentialsRequestModelDtoCredentialsInner>? = null,

    /* Nonce provided by the verifier to be returned in the response */
    @Json(name = "nonce")
    val nonce: kotlin.String? = null,

    @Json(name = "presentation_definition")
    val presentationDefinition: PresentationDefinition? = null,

    @Json(name = "redirect_uri")
    val redirectUri: kotlin.String? = null,

    /* Parameter to ask the Wallet to send the response to the verifier. Possible values are 'direct_post', 'post'. */
    @Json(name = "response_mode")
    val responseMode: PresentationRequestSubmitRequestModelDto.ResponseMode? = null,

    /* Response type of the request. Possible values are `vp_token`, `id_token` */
    @Json(name = "response_type")
    val responseType: PresentationRequestSubmitRequestModelDto.ResponseType? = null,

    /* Response uri of the request. Only relevant if response type is `direct_post` */
    @Json(name = "response_uri")
    val responseUri: kotlin.String? = null,

    /* State provided by the verifier to be returned in the response */
    @Json(name = "verifier_state")
    val verifierState: kotlin.String? = null

) {

    /**
     * Parameter to ask the Wallet to send the response to the verifier. Possible values are 'direct_post', 'post'.
     *
     * Values: directPost,post
     */
    @JsonClass(generateAdapter = false)
    enum class ResponseMode(val value: kotlin.String) {
        @Json(name = "direct_post") directPost("direct_post"),
        @Json(name = "post") post("post");
    }
    /**
     * Response type of the request. Possible values are `vp_token`, `id_token`
     *
     * Values: vpToken,vpTokenIdToken,idToken
     */
    @JsonClass(generateAdapter = false)
    enum class ResponseType(val value: kotlin.String) {
        @Json(name = "vp_token") vpToken("vp_token"),
        @Json(name = "vp_token id_token") vpTokenIdToken("vp_token id_token"),
        @Json(name = "id_token") idToken("id_token");
    }
}

